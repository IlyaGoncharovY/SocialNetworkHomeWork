{"version":3,"file":"static/js/570.3b976c48.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","webpack://my-app/./src/Components/Dialogs/Message/DialogsMessage.module.css?4455","Components/Dialogs/Message/Message.tsx","webpack://my-app/./src/Components/Dialogs/DialogItem/DialogsItem.module.css?3ebf","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Dialogs.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/AuthRedirectComponent.tsx","Components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Hqi+a\",\"dialogsItems\":\"Dialogs_dialogsItems__Q-hJm\",\"active\":\"Dialogs_active__+-Upc\",\"messages\":\"Dialogs_messages__Rxr9C\",\"message\":\"Dialogs_message__AXazt\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogsMessage_dialogs__BINCe\",\"dialogsItems\":\"DialogsMessage_dialogsItems__oSgK1\",\"active\":\"DialogsMessage_active__TO56a\",\"messages\":\"DialogsMessage_messages__Yd7MU\",\"message\":\"DialogsMessage_message__G9Rv7\"};","import React from 'react';\r\nimport s from \"./DialogsMessage.module.css\";\r\n\r\ntype MessagePropsType = {\r\n    message:string\r\n}\r\n\r\nexport const Message = (props:MessagePropsType) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogsItem_dialogs__yAZnS\",\"dialogsItems\":\"DialogsItem_dialogsItems__RxJoC\",\"active\":\"DialogsItem_active__y+idr\",\"messages\":\"DialogsItem_messages__kZcaA\",\"message\":\"DialogsItem_message__JZ7Iq\"};","import s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogsPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport const DialogItem = (props: DialogsPropsType) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return <div className={s.dialog + \" \" + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {dialogsContainerType} from \"./DialogsContainer\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\ntype Values = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport const Dialogs = (props: dialogsContainerType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElements = state.dialog.map(el => <DialogItem name={el.name} id={el.id} key={el.id}/>)\r\n\r\n    let messagesElement = state.message.map(el => <Message message={el.message} key={el.id}/>)\r\n\r\n    let addNewMessage = (values: Values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            newMessageBody: \"\"\r\n        },\r\n        onSubmit: values => {\r\n            addNewMessage(values)\r\n            formik.resetForm()\r\n        },\r\n        validationSchema: Yup.object({\r\n            newPostText: Yup.string()\r\n                .max(30, 'Must be 30 characters or less')\r\n        })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.dialogs}>\r\n                    <div className={s.dialogsItems}>\r\n                        {dialogElements}\r\n                    </div>\r\n                    <div className={s.messages}>\r\n                        <div>\r\n                            <div>\r\n                                {messagesElement}\r\n                            </div>\r\n                            <textarea name={\"newMessageBody\"}\r\n                                      placeholder={\"Enter you message\"}\r\n                                      onChange={formik.handleChange}\r\n                                      value={formik.values.newMessageBody}\r\n                            />\r\n                            {formik.touched.newMessageBody && formik.errors.newMessageBody &&\r\n                                <div style={{color: \"red\", opacity: \"0.8\"}}>{formik.errors.newMessageBody}</div>}\r\n                            <div>\r\n                                <Button variant={\"contained\"} size={\"small\"} type={\"submit\"}>SEND</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/r-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function AuthRedirectComponent<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) return <Redirect to={\"./login\"}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectRedirectComponent\r\n}","import React from 'react';\r\nimport {initialStateType, sendMessageAC} from \"../../redux/reducers/dialig/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/r-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AuthRedirectComponent} from \"../../hoc/AuthRedirectComponent\";\r\n\r\ntype mapStateToPropsType = {\r\n    dialogsPage: initialStateType\r\n    newMessageBody: initialStateType\r\n    // isAuth:boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    sendMessage:(body:string) => void\r\n}\r\n\r\nexport type dialogsContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType):mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.messagePage,\r\n        newMessageBody: state.messagePage,\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody:string) => {\r\n            let action = sendMessageAC(newMessageBody)\r\n           dispatch(action)\r\n        }\r\n    }\r\n}\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirectComponent\r\n)(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent(Dialogs))\r\nexport default DialogsContainer"],"names":["Message","props","className","s","message","DialogItem","path","id","to","name","Dialogs","state","dialogsPage","dialogElements","dialog","map","el","messagesElement","formik","useFormik","initialValues","newMessageBody","onSubmit","values","sendMessage","addNewMessage","resetForm","validationSchema","Yup","newPostText","max","handleSubmit","placeholder","onChange","handleChange","value","touched","errors","style","color","opacity","Button","variant","size","type","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","isAuth","auth","AuthRedirectComponent","Component","connect","restProps","messagePage","mapDispatchToProps","dispatch","action","sendMessageAC","compose"],"sourceRoot":""}